:root {
    --cubeSideLength: 100px;
    --cubeSideLengthSmall: 50px;
    --primaryColor: red; /* Example value, replace with your desired color */
    --border: 2px solid black; /* Example value, replace with your desired border */
    --transitionInterval: 0.3s; /* Example value, replace with your desired transition duration */
    --translateValue: 50px;
    --translateValueSmall: 25px;
}

@keyframes animate {
    0% {
        transform: rotateX(-30deg) rotateY(0deg);
    }
    100% {
        transform: rotateX(-30deg) rotateY(360deg);
    }
}

.cube {
    position: absolute;
    width: var(--cubeSideLength);
    height: var(--cubeSideLength);
    top: 70%;
    left: 12%;
    transform-style: preserve-3d;
    transform: rotateX(-30deg);
    animation: animate 4s linear infinite;
    transition: var(--transitionInterval);   
}

.cube div {
    position: absolute;
    width: var(--cubeSideLength);
    height: var(--cubeSideLength);
    transform-style: preserve-3d;
    z-index: -4;
    border-left: var(--border);
}

.cube div span {
    position: absolute;
    top: 0;
    left: 0;
    width: var(--cubeSideLength);
    height: var(--cubeSideLength);
    background: black; /* Not redundant; this is required to make the cube opaque. */
    border: var(--border);
}

.cube div span:nth-child(1) {
    transform: rotateY(90deg) translateZ(var(--translateValue));
    transition: var(--transitionInterval);
}

.cube div span:nth-child(2) {
    transform: rotateY(180deg) translateZ(var(--translateValue));
    transition: var(--transitionInterval);
}

.cube div span:nth-child(3) {
    transform: rotateY(270deg) translateZ(var(--translateValue));
    transition: var(--transitionInterval);
}

.cube div span:nth-child(4) {
    transform: rotateY(360deg) translateZ(var(--translateValue));
    transition: var(--transitionInterval);
}

.cubeLid {
    border: var(--border);
    position: absolute;
    top: 0;
    left: 0;
    width: calc(var(--cubeSideLength) / 2);
    height: calc(var(--cubeSideLength) / 2);
    transform: rotateX(90deg) translateZ(50px);
    transition: var(--transitionInterval);
}

@media (max-width: 400px) {
    .cube {
        top: 77%;
        width: var(--cubeSideLengthSmall);
        height: var(--cubeSideLengthSmall);
    }

    .cube div {
        width: var(--cubeSideLengthSmall);
        height: var(--cubeSideLengthSmall);
    }

    .cube div span {
        position: absolute;
        top: 0;
        left: 0;
        width: var(--cubeSideLengthSmall);
        height: var(--cubeSideLengthSmall);
        background: black; /* Not redundant; this is required to make the cube opaque. */
        border: var(--border);
    }

    .cube div span:nth-child(1) {
        transform: rotateY(90deg) translateZ(var(--translateValueSmall));
    }

    .cube div span:nth-child(2) {
        transform: rotateY(180deg) translateZ(var(--translateValueSmall));
    }

    .cube div span:nth-child(3) {
        transform: rotateY(270deg) translateZ(var(--translateValueSmall));
    }

    .cube div span:nth-child(4) {
        transform: rotateY(360deg) translateZ(var(--translateValueSmall));
    }

    .cubeLid {
        width: 40px;
        height: 40px;
    }
}